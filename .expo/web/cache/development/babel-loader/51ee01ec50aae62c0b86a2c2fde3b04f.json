{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Volumes/Coding/NPM/Class Projects/C-78/screens/IssLocation.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport MapView, { Marker } from 'react-native-maps';\n\nvar IssLocationScreen = function (_Component) {\n  _inherits(IssLocationScreen, _Component);\n\n  var _super = _createSuper(IssLocationScreen);\n\n  function IssLocationScreen(props) {\n    var _this;\n\n    _classCallCheck(this, IssLocationScreen);\n\n    _this = _super.call(this, props);\n\n    _this.get_DATA = function () {\n      axios.get(\"https://api.wheretheiss.at/v1/satellites/25544\").then(function (Response_get) {\n        _this.setState({\n          ISS_LOCATION: Response_get.data\n        });\n      }).catch(function (error) {\n        Alert.alert(\"error\", error.message);\n      });\n    };\n\n    _this.state = {\n      ISS_LOCATION: {}\n    };\n    return _this;\n  }\n\n  _createClass(IssLocationScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.get_DATA();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, React.createElement(ImageBackground, {\n        source: require(\"../assets/bg.png\"),\n        style: styles.bg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.txt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, \"International Space Station Location\"), React.createElement(MapView, {\n        region: {\n          latitude: this.state.ISS_LOCATION.latitude,\n          longitude: this.state.ISS_LOCATION.longitude,\n          latitudeDelta: 180,\n          longitudeDelta: 180\n        },\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      }, React.createElement(Marker, {\n        coordinate: {\n          latitude: this.state.ISS_LOCATION.latitude,\n          longitude: this.state.ISS_LOCATION.longitude\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/ISS.png\"),\n        style: styles.img,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }\n      })), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }, this.state.ISS_LOCATION.latitude), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }, this.state.ISS_LOCATION.longitude), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, this.state.ISS_LOCATION.altitude), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }\n      }, this.state.ISS_LOCATION.velocity), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }, this.state.ISS_LOCATION.vi))));\n    }\n  }]);\n\n  return IssLocationScreen;\n}(Component);\n\nexport { IssLocationScreen as default };\nvar styles = StyleSheet.create({\n  bg: {\n    flex: 1,\n    resizeMode: \"cover\"\n  },\n  img: {\n    width: 80,\n    height: 20\n  },\n  img2: {\n    flex: 1,\n    position: \"absolute\",\n    resizeMode: \"contain\",\n    width: \"100%\",\n    height: \"100%\",\n    marginTop: -50,\n    transform: [{\n      rotate: \"-100deg\"\n    }]\n  },\n  txt: {\n    color: \"white\",\n    textAlign: \"left\",\n    fontSize: 40,\n    marginTop: 70,\n    marginLeft: 10,\n    fontWeight: \"bold\",\n    textShadowOffset: {\n      width: 0.5,\n      height: 0.5\n    },\n    textShadowRadius: 2,\n    textShadowColor: 'grey'\n  },\n  txt1: {\n    color: \"white\",\n    right: 20,\n    bottom: -35,\n    position: \"absolute\",\n    fontSize: 80,\n    marginTop: 70,\n    marginLeft: 0,\n    fontWeight: \"bold\",\n    opacity: 0.5,\n    textShadowOffset: {\n      width: 2,\n      height: 2\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'black'\n  },\n  txt2: {\n    color: \"white\",\n    textAlign: \"left\",\n    fontSize: 40,\n    marginTop: 70,\n    marginLeft: 30,\n    marginBottom: 15,\n    fontWeight: \"bold\",\n    textShadowOffset: {\n      width: 2,\n      height: 2\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'black'\n  },\n  TOuchOPA: {\n    backgroundColor: \"#282424\",\n    margin: 20,\n    marginTop: 100,\n    borderRadius: 30\n  }\n});","map":{"version":3,"sources":["/Volumes/Coding/NPM/Class Projects/C-78/screens/IssLocation.js"],"names":["axios","React","Component","MapView","Marker","IssLocationScreen","props","get_DATA","get","then","Response_get","setState","ISS_LOCATION","data","catch","error","Alert","alert","message","state","flex","require","styles","bg","txt","latitude","longitude","latitudeDelta","longitudeDelta","width","height","img","altitude","velocity","vi","StyleSheet","create","resizeMode","img2","position","marginTop","transform","rotate","color","textAlign","fontSize","marginLeft","fontWeight","textShadowOffset","textShadowRadius","textShadowColor","txt1","right","bottom","opacity","txt2","marginBottom","TOuchOPA","backgroundColor","margin","borderRadius"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Text, View, ImageBackground, StyleSheet, Alert, Image } from 'react-native';\nimport MapView, { Marker } from 'react-native-maps';\n\nexport default class IssLocationScreen extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            ISS_LOCATION: {}\n        }\n    }\n\n    componentDidMount() {\n        this.get_DATA()\n    }\n\n    get_DATA = () => {\n        axios.get(\"https://api.wheretheiss.at/v1/satellites/25544\").then(Response_get => {\n            this.setState({ ISS_LOCATION: Response_get.data })\n        })\n            .catch(\n                error => {\n                    Alert.alert(\"error\", error.message)\n                }\n            )\n    }\n\n    render() {\n        return (\n            <View style={{ flex: 1, }}>\n                <ImageBackground source={require(\"../assets/bg.png\")} style={styles.bg}>\n                    <Text style={styles.txt}>International Space Station Location</Text>\n\n                    <MapView\n                        region={{\n                            latitude: this.state.ISS_LOCATION.latitude,\n                            longitude: this.state.ISS_LOCATION.longitude,\n                            latitudeDelta: 180,\n                            longitudeDelta: 180,\n                        }}\n                        style={{ width: '100%', height: '100%' }}>\n                        <Marker coordinate={{\n                            latitude: this.state.ISS_LOCATION.latitude,\n                            longitude: this.state.ISS_LOCATION.longitude,\n                        }}>\n                            <Image source={require(\"../assets/ISS.png\")} style={styles.img} />\n                        </Marker>\n                        <Text>{this.state.ISS_LOCATION.latitude}</Text>\n                        <Text>{this.state.ISS_LOCATION.longitude}</Text>\n                        <Text>{this.state.ISS_LOCATION.altitude}</Text>\n                        <Text>{this.state.ISS_LOCATION.velocity}</Text>\n                        <Text>{this.state.ISS_LOCATION.vi}</Text>\n                    </MapView>\n                </ImageBackground>\n            </View>\n        )\n    }\n}\n\n\n\nconst styles = StyleSheet.create({\n    bg: {\n        flex: 1,\n        resizeMode: \"cover\",\n    },\n    img: {\n        width: 80,\n        height: 20,\n    },\n    img2: {\n        flex: 1,\n        position: \"absolute\",\n        resizeMode: \"contain\",\n        width: \"100%\",\n        height: \"100%\",\n        marginTop: -50,\n        transform: [{ rotate: \"-100deg\" }],\n    },\n    txt: {\n\n        color: \"white\",\n        textAlign: \"left\",\n        fontSize: 40,\n        marginTop: 70,\n        marginLeft: 10,\n        fontWeight: \"bold\",\n        textShadowOffset: { width: 0.5, height: 0.5 },\n        textShadowRadius: 2,\n        textShadowColor: 'grey',\n    },\n    txt1: {\n        color: \"white\",\n        right: 20,\n        bottom: -35,\n        position: \"absolute\",\n        fontSize: 80,\n        marginTop: 70,\n        marginLeft: 0,\n        fontWeight: \"bold\",\n        opacity: 0.5,\n        textShadowOffset: { width: 2, height: 2 },\n        textShadowRadius: 10,\n        textShadowColor: 'black',\n    },\n    txt2: {\n        color: \"white\",\n        textAlign: \"left\",\n        fontSize: 40,\n        marginTop: 70,\n        marginLeft: 30,\n        marginBottom: 15,\n        fontWeight: \"bold\",\n        textShadowOffset: { width: 2, height: 2 },\n        textShadowRadius: 10,\n        textShadowColor: 'black',\n    },\n    TOuchOPA: {\n        backgroundColor: \"#282424\",\n        margin: 20,\n        marginTop: 100,\n        borderRadius: 30,\n    }\n});"]},"metadata":{},"sourceType":"module"}